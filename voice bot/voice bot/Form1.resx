<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>